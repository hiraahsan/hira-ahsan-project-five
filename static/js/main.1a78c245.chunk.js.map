{"version":3,"sources":["firebase.js","Images.js","StoredImages.js","StorySection.js","InputSearch.js","Details.js","Svg.js","MainSection.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Images","props","className","type","name","id","indexKey","value","previewImg","onChange","appendImages","handleChange","htmlFor","src","alt","href","linkToPage","StoredImages","storedImg","StorySection","storedTextId","storedText","InputSearch","onSubmit","handleSubmitSearch","handleSearchImages","placeholder","Details","Svg","xmlns","viewBox","data-name","x","width","height","rx","fill","d","transform","y","MainSection","setState","imageToAppend","document","querySelector","idOfImage","handleChangeInput","event","userInput","target","inputToSearch","preventDefault","state","axios","params","per_page","then","response","console","log","data","results","catch","error","alert","handleSubmit","dbRefText","push","dbRefImages","isButtonDisabled","apiUrl","mappedArray","imageArray","textArray","mappedDbref","database","ref","this","order_by","on","snapshot","images","val","newImages","key","individualImages","imageId","imageUrl","stories","newStories","individualStories","storyId","storyText","storedImages","map","image","i","text","imagesFinal","urls","small","links","html","alt_description","maxLength","disabled","Component","App","dbRef","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a78c245.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAyf12FdGTgypQ0Ae48KszC61cViIsSRAU\",\n    authDomain: \"project-five-tests.firebaseapp.com\",\n    databaseURL: \"https://project-five-tests.firebaseio.com\",\n    projectId: \"project-five-tests\",\n    storageBucket: \"project-five-tests.appspot.com\",\n    messagingSenderId: \"909191868794\",\n    appId: \"1:909191868794:web:1046029a4765b1b69566c3\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n\n\nexport default firebase;","import React from 'react';\n\nconst Images = (props) => {\n    return(\n        <div className=\"miniContainers\">\n            <input type=\"radio\" name=\"radio\" id={props.indexKey} value={props.previewImg} onChange={() => props.appendImages(props.handleChange)}/>\n            <label htmlFor={props.indexKey}>\n                <img src={props.previewImg} alt={props.alt}/>\n            </label>\n            <a href={props.linkToPage}>Link to full size</a>\n        </div>\n    )\n}\n\nexport default Images;","import React from 'react';\n\nconst StoredImages = (props) => {\n    return(\n        <>\n        <div className=\"storedImageSection\">\n            <img alt=\"\" id={props.id} src={props.storedImg}></img>\n        </div>\n        </>\n    )\n}\n\nexport default StoredImages;","import React from 'react';\n\nconst StorySection = (props) => {\n    return(\n        <>\n        <div className=\"storyContainer\">\n            <p id={props.storedTextId}>{props.storedText}</p>\n        </div>\n        </>\n    )\n}\n\nexport default StorySection;","import React from 'react';\n\nconst InputSearch = (props) => {\n    return(\n        <form className=\"searchForm\" onSubmit={props.handleSubmitSearch}>\n            <input onChange={props.handleSearchImages} type=\"text\" placeholder=\"Enter search term here\"/>\n            <button onSubmit={props.handleSubmitSearch} type=\"submit\">Search for images</button>\n        </form>\n    )\n}\n\nexport default InputSearch;","import React from 'react';\n\nconst Details = (props) => {\n    return(\n        <details>\n            <summary>\n                Welcome to Writerâ€™s Block! Select this to view instructions below:\n            </summary>\n            <ol>\n                <li>Search for an image. </li>\n                <li>Select the image you want from the image section below - you will need to scroll through them. </li>\n                <li>Enter in some text to go along with the image.</li>\n                <li>Click submit button and there you go! The story has began</li>\n                <li>Please note: you can only submit one image + text at a time, the page will need to be refreshed and process repeated for any further ones. We are working on a login page so users can save their items.</li>\n            </ol>\n        </details>\n    )\n}\n\nexport default Details;","import React from 'react';\n\nconst Svg = (props) => {\n    return(\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 565 470.54\"><title>Bookshelf svg</title>\n            <g className=\"shelf bookOne\" id=\"shelf bookOne\" data-name=\"Layer 1\"><rect x=\"130\" width=\"77\" height=\"359\" rx=\"21.32\" fill=\"#ed6a5a\" /><path d=\"M694.5,681.5\" transform=\"translate(-535 -225)\" fill=\"#fff\" /><path d=\"M694.5,681.5\" transform=\"translate(-535 -225)\" fill=\"#fff\" />\n            <path d=\"M696,300.5a16.5,16.5,0,0,1,0-33h16a16.5,16.5,0,0,1,0,33Z\" transform=\"translate(-535 -225)\" fill=\"#ce665d\" /><path d=\"M712,268a16,16,0,0,1,0,32H696a16,16,0,0,1,0-32h16m0-1H696a17,17,0,0,0-17,17h0a17,17,0,0,0,17,17h16a17,17,0,0,0,17-17h0a17,17,0,0,0-17-17Z\" transform=\"translate(-535 -225)\" fill=\"#fff\" /><path d=\"M696,342.5a16.5,16.5,0,0,1,0-33h16a16.5,16.5,0,0,1,0,33Z\" transform=\"translate(-535 -225)\" fill=\"#ce665d\" /><path d=\"M712,310a16,16,0,0,1,0,32H696a16,16,0,0,1,0-32h16m0-1H696a17,17,0,0,0-17,17h0a17,17,0,0,0,17,17h16a17,17,0,0,0,17-17h0a17,17,0,0,0-17-17Z\" transform=\"translate(-535 -225)\" fill=\"#fff\" /></g><g className=\"shelf bookTwo\" id=\"shelf bookTwo\" data-name=\"Layer 6\"><rect x=\"207\" y=\"73\" width=\"87\" height=\"283\" rx=\"21.32\" fill=\"#d0b8ac\" /><path d=\"M785.5,380.5a20,20,0,1,1,20-20A20,20,0,0,1,785.5,380.5Z\" transform=\"translate(-535 -225)\" fill=\"#d0b8ac\" /><path d=\"M785.5,341A19.5,19.5,0,1,1,766,360.5,19.53,19.53,0,0,1,785.5,341m0-1A20.5,20.5,0,1,0,806,360.5,20.5,20.5,0,0,0,785.5,340Z\" transform=\"translate(-535 -225)\" fill=\"#fff\" /></g><g className=\"shelf bookThree\" id=\"shelf bookThree\" data-name=\"Layer 5\"><rect x=\"372\" y=\"5\" width=\"78\" height=\"354\" rx=\"21.32\" fill=\"#c19ab7\" /><path d=\"M946,327.5A16.52,16.52,0,0,1,929.5,311V286a16.5,16.5,0,0,1,33,0v25A16.52,16.52,0,0,1,946,327.5Z\" transform=\"translate(-535 -225)\" fill=\"#c19ab7\" /><path d=\"M946,270a16,16,0,0,1,16,16v25a16,16,0,0,1-32,0V286a16,16,0,0,1,16-16m0-1h0a17,17,0,0,0-17,17v25a17,17,0,0,0,17,17h0a17,17,0,0,0,17-17V286a17,17,0,0,0-17-17Z\" transform=\"translate(-535 -225)\" fill=\"#fff\" /></g><g className=\"shelf bookFour\" id=\"shelf bookFour\" data-name=\"Layer 4\"><rect x=\"294\" y=\"33\" width=\"78\" height=\"324\" rx=\"21.32\" fill=\"#ccddd3\" /><path d=\"M868.5,360.5a20,20,0,1,1,20-20A20,20,0,0,1,868.5,360.5Z\" transform=\"translate(-535 -225)\" fill=\"#ccddd3\" /><path d=\"M868.5,321A19.5,19.5,0,1,1,849,340.5,19.53,19.53,0,0,1,868.5,321m0-1A20.5,20.5,0,1,0,889,340.5,20.5,20.5,0,0,0,868.5,320Z\" transform=\"translate(-535 -225)\" fill=\"#fff\" /></g><g className=\"bookshelf\" id=\"bookshelf\" data-name=\"Layer 3\"><path d=\"M535,638.88V588.12A16.12,16.12,0,0,1,551.12,572h532.76A16.12,16.12,0,0,1,1100,588.12v50.76A16.12,16.12,0,0,1,1083.88,655H551.12C550,655,544.33,654.89,535,638.88Z\" transform=\"translate(-535 -225)\" fill=\"#644536\" /></g><g id=\"Layer_2\" data-name=\"Layer 2\"><path d=\"M654.5,655.5c-1.79,24.22,16.22,41,30,40,12.94-.92,27.42-17.87,25-40\" transform=\"translate(-535 -225)\" fill=\"#644536\" /><path d=\"M927.26,655.49c-1.78,24.21,16.23,41,30,40,12.94-.93,27.42-17.87,25-40\" transform=\"translate(-535 -225)\" fill=\"#644536\" /></g>\n        </svg>\n    )\n}\n\nexport default Svg;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport firebase from 'firebase/app';\nimport Images from './Images';\nimport StoredImages from './StoredImages';\nimport StorySection from './StorySection';\nimport InputSearch from './InputSearch';\nimport Details from './Details';\nimport Svg from './Svg';\n\n// To-Do: filter the selections by their height/widths?? and image types\n\nclass MainSection extends Component {\n    constructor() {\n        super();\n        this.state = {\n            apiKey: '851ca0e417e4da7927bb7094b0bb790d78758e507f353acd3aaa66d2e6e48462',\n            apiUrl: 'https://api.unsplash.com',\n            data: [],\n            mappedArray: [],\n            imageArray: [],\n            textArray: [],\n            imageToAppend: '',\n            userInput: '',\n            inputToSearch: '',\n            mappedDbref: '',\n            isButtonDisabled: false,\n            dbRefImages: firebase.database().ref('/images'),\n            dbRefText: firebase.database().ref('/text')\n        }\n    }\n\n    componentDidMount() {\n\n        axios({\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": `${this.state.apiUrl}/photos/?client_id=${this.state.apiKey}`,\n            \"method\": \"GET\",\n            params: {\n                per_page: 20,\n                order_by: \"popular\"\n            }\n        }).then( (response) => {\n            this.setState({\n                data: response.data\n            })\n        }).catch(error => {\n            alert(error);\n        })\n\n        this.state.dbRefImages.on('value', (snapshot) => {\n            const images = snapshot.val();\n            const newImages = []\n\n            for (let key in images) {\n                const individualImages = {\n                    imageId: key,\n                    imageUrl: images[key]\n                }\n                newImages.push(individualImages);\n            }\n\n            this.setState({\n                imageArray: newImages\n            })\n        })\n\n        this.state.dbRefText.on('value', (snapshot) => {\n            const stories = snapshot.val();\n            const newStories = []\n\n            for (let key in stories) {\n                const individualStories = {\n                    storyId: key,\n                    storyText: stories[key]\n                }\n                newStories.push(individualStories);\n            }\n\n            this.setState({\n                textArray: newStories\n            })\n        })\n    }\n\n    handleChange = () => {\n        this.setState({\n            imageToAppend: document.querySelector('input[name=\"radio\"]:checked').value,\n            idOfImage: document.querySelector('input[name=\"radio\"]:checked').id\n        })\n    }\n\n    handleChangeInput = (event) => {\n        this.setState({\n            userInput: event.target.value\n        })\n    }\n\n    handleSearchImages = (event) => {\n        this.setState({\n            inputToSearch: event.target.value\n        })\n    }\n\n    handleSubmitSearch = (event) => {\n        event.preventDefault();\n\n        if(this.state.inputToSearch !== '') {\n\n            let callApi = () => {\n                axios({\n                    \"async\": true,\n                    \"crossDomain\": true,\n                    \"url\": `https://api.unsplash.com/search/photos/?client_id=851ca0e417e4da7927bb7094b0bb790d78758e507f353acd3aaa66d2e6e48462&query=${this.state.inputToSearch}`,\n                    \"method\": \"GET\",\n                    params: {\n                        per_page: 20\n                    }\n                }).then((response) => {\n                    console.log(response)\n                    this.setState({\n                        data: response.data.results\n                    })\n                }).catch(error => {\n                    console.log(error);\n                })\n            }\n            callApi();\n            // this.props.valueChange= \"\";\n            this.setState({\n                inputToSearch: ''\n            })\n        } else {\n            alert(\"Enter in a search term to continue!\");\n        }\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        // and if statement, if both radio button is selected and text area is filled, the data will be pushed then\n\n        if (this.state.userInput !== '') {\n\n            if (this.state.imageToAppend !== '') {\n                console.log('input has registered');\n                this.state.dbRefText.push(this.state.userInput);\n                this.state.dbRefImages.push(this.state.imageToAppend);\n\n                this.setState({\n                    isButtonDisabled: true\n                })\n            }\n        } else {\n            console.log('this did not work')\n            alert('Select an image and enter in text to continue!')\n            // enter in error message function\n        }\n\n    }\n\n    \n\n    render() {\n\n        const storedImages = this.state.imageArray.map((image, i) => (\n            <StoredImages\n                storedImg={image.imageUrl}\n                id={image.imageId}\n                key={i}\n            />\n        ))\n        \n        const storedText = this.state.textArray.map((text, i) => (\n                <StorySection\n                    storedText={text.storyText}\n                    storedTextId={text.storyId}\n                    key={i}\n                />\n            ))\n        // appending text\n\n        const imagesFinal = this.state.data.map((response, i) => (\n            <Images\n                previewImg={response.urls.small}\n                linkToPage={response.links.html}\n                indexKey={i}\n                alt={response.alt_description}\n                appendImages={this.handleChange}\n            />\n        ))\n\n        // appending images\n\n        return (\n            <div className=\"App\">\n\n                <div className=\"header-section\">\n                        <h1>Writer's Block</h1>\n\n                        <Svg />\n                </div>\n\n                <Details />\n\n                <InputSearch handleSearchImages={this.handleSearchImages} handleSubmitSearch={this.handleSubmitSearch} />\n\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"imageSection\">\n                        <section>\n                            <div className=\"imageContainer\">\n                                {imagesFinal}\n                            </div>\n\n                        </section>\n\n                    </div>\n                    <div className=\"userInputSection\">\n                        <textarea onChange={this.handleChangeInput} placeholder=\"Start writing your story here! For example: You hear a knock on the door. You open it and you see a white haired man dressed like a wizard on your porch, in the middle of July. He says his name is Albus Dumbledore and he's come to take your daughter to a boarding school for witches and wizards.\" maxLength=\"500\"></textarea>\n                        <button disabled={this.state.isButtonDisabled} type=\"submit\">Submit text here</button>\n                    </div>\n                </form>\n                <div className=\"splitSection clearfix\">\n                    <div className=\"imageSplit\">{storedImages}</div>\n                    <div className=\"textSplit\">{storedText}</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MainSection;","import React, { Component } from 'react';\nimport firebase from './firebase';\nimport './styles/App.css';\nimport MainSection from './MainSection';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      dbRef: firebase.database().ref()\n    }\n  }\n\n  render() {\n\n    return (\n      <div className=\"App wrapper\">\n        <MainSection />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}