{"version":3,"sources":["firebase.js","Images.js","StoredImages.js","StorySection.js","InputSearch.js","Details.js","Svg.js","Preview.js","MainSection.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Images","props","className","alt","type","name","id","indexKey","value","previewImg","onChange","appendImages","handleChange","htmlFor","src","href","linkToPage","StoredImages","storedImg","StorySection","storedTextId","storedText","InputSearch","onSubmit","handleSubmitSearch","handleSearchImages","placeholder","inputToSearch","Details","Svg","xmlns","viewBox","data-name","x","width","height","rx","fill","d","transform","y","Preview","MainSection","setState","imageToAppend","document","querySelector","idOfImage","altText","handleChangeInput","event","userInput","target","preventDefault","state","axios","params","per_page","then","response","data","results","catch","error","alert","handleSubmit","dbRefText","push","dbRefImages","dbRefAlt","apiUrl","mappedArray","imageArray","textArray","altArray","mappedDbref","textToAppend","isButtonDisabled","database","ref","this","order_by","on","snapshot","images","val","newImages","key","individualImages","imageId","imageUrl","stories","newStories","individualStories","storyId","storyText","individualAlt","newAltText","altId","storedImages","map","image","i","text","imagesFinal","urls","small","links","html","alt_description","maxLength","disabled","Component","Footer","App","dbRef","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1fbfbbe0.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAyf12FdGTgypQ0Ae48KszC61cViIsSRAU\",\r\n    authDomain: \"project-five-tests.firebaseapp.com\",\r\n    databaseURL: \"https://project-five-tests.firebaseio.com\",\r\n    projectId: \"project-five-tests\",\r\n    storageBucket: \"project-five-tests.appspot.com\",\r\n    messagingSenderId: \"909191868794\",\r\n    appId: \"1:909191868794:web:1046029a4765b1b69566c3\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\n\r\nexport default firebase;","import React from 'react';\r\n\r\nconst Images = (props) => {\r\n    return(\r\n        <div className=\"miniContainers\">\r\n            <input alt={props.alt} type=\"radio\" name=\"radio\" id={props.indexKey} value={props.previewImg} onChange={() => props.appendImages(props.handleChange)}/>\r\n            <label htmlFor={props.indexKey}>\r\n                <img src={props.previewImg} alt={props.alt}/>\r\n            </label>\r\n            <a href={props.linkToPage}>Link to full size</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Images;","import React from 'react';\r\n\r\nconst StoredImages = (props) => {\r\n    return(\r\n        <>\r\n        <div className=\"storedImageSection\">\r\n            <img alt=\"\" id={props.id} src={props.storedImg}></img>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StoredImages;","import React from 'react';\r\n\r\nconst StorySection = (props) => {\r\n    return(\r\n        <>\r\n        <div className=\"storyContainer\">\r\n            <p id={props.storedTextId}>{props.storedText}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StorySection;","import React from 'react';\r\n\r\nconst InputSearch = (props) => {\r\n    return(\r\n        <form className=\"searchForm\" onSubmit={props.handleSubmitSearch}>\r\n            <input onChange={props.handleSearchImages} type=\"text\" placeholder=\"Enter search term here\" value={props.inputToSearch}/>\r\n            <button onSubmit={props.handleSubmitSearch} type=\"submit\">Search for images</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default InputSearch;","import React from 'react';\r\n\r\nconst Details = (props) => {\r\n    return(\r\n        <details>\r\n            <summary>\r\n                Welcome to Writerâ€™s Block! Select this to view instructions below:\r\n            </summary>\r\n            <ol>\r\n                <li>Search for an image. </li>\r\n                <li>Select the image you want from the image section below - you will need to scroll through them. </li>\r\n                <li>Enter in some text to go along with the image.</li>\r\n                <li>Click submit button and there you go! The story has began</li>\r\n                <li>Please note: you can only submit one image + text at a time, the page will need to be refreshed and process repeated for any further ones. We are working on a login page so users can save their items.</li>\r\n            </ol>\r\n        </details>\r\n    )\r\n}\r\n\r\nexport default Details;","import React from 'react';\r\n\r\nconst Svg = (props) => {\r\n    return(\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 565 470.54\"><title>Bookshelf svg</title>\r\n            <g className=\"shelf bookOne\" id=\"shelf bookOne\" data-name=\"Layer 1\"><rect x=\"130\" width=\"77\" height=\"359\" rx=\"21.32\" fill=\"#ed6a5a\" /><path d=\"M694.5,681.5\" transform=\"translate(-535 -225)\" fill=\"#fff\" /><path d=\"M694.5,681.5\" transform=\"translate(-535 -225)\" fill=\"#fff\" />\r\n            <path d=\"M696,300.5a16.5,16.5,0,0,1,0-33h16a16.5,16.5,0,0,1,0,33Z\" transform=\"translate(-535 -225)\" fill=\"#ce665d\" /><path d=\"M712,268a16,16,0,0,1,0,32H696a16,16,0,0,1,0-32h16m0-1H696a17,17,0,0,0-17,17h0a17,17,0,0,0,17,17h16a17,17,0,0,0,17-17h0a17,17,0,0,0-17-17Z\" transform=\"translate(-535 -225)\" fill=\"#fff\" /><path d=\"M696,342.5a16.5,16.5,0,0,1,0-33h16a16.5,16.5,0,0,1,0,33Z\" transform=\"translate(-535 -225)\" fill=\"#ce665d\" /><path d=\"M712,310a16,16,0,0,1,0,32H696a16,16,0,0,1,0-32h16m0-1H696a17,17,0,0,0-17,17h0a17,17,0,0,0,17,17h16a17,17,0,0,0,17-17h0a17,17,0,0,0-17-17Z\" transform=\"translate(-535 -225)\" fill=\"#fff\" /></g><g className=\"shelf bookTwo\" id=\"shelf bookTwo\" data-name=\"Layer 6\"><rect x=\"207\" y=\"73\" width=\"87\" height=\"283\" rx=\"21.32\" fill=\"#d0b8ac\" /><path d=\"M785.5,380.5a20,20,0,1,1,20-20A20,20,0,0,1,785.5,380.5Z\" transform=\"translate(-535 -225)\" fill=\"#d0b8ac\" /><path d=\"M785.5,341A19.5,19.5,0,1,1,766,360.5,19.53,19.53,0,0,1,785.5,341m0-1A20.5,20.5,0,1,0,806,360.5,20.5,20.5,0,0,0,785.5,340Z\" transform=\"translate(-535 -225)\" fill=\"#fff\" /></g><g className=\"shelf bookThree\" id=\"shelf bookThree\" data-name=\"Layer 5\"><rect x=\"372\" y=\"5\" width=\"78\" height=\"354\" rx=\"21.32\" fill=\"#c19ab7\" /><path d=\"M946,327.5A16.52,16.52,0,0,1,929.5,311V286a16.5,16.5,0,0,1,33,0v25A16.52,16.52,0,0,1,946,327.5Z\" transform=\"translate(-535 -225)\" fill=\"#c19ab7\" /><path d=\"M946,270a16,16,0,0,1,16,16v25a16,16,0,0,1-32,0V286a16,16,0,0,1,16-16m0-1h0a17,17,0,0,0-17,17v25a17,17,0,0,0,17,17h0a17,17,0,0,0,17-17V286a17,17,0,0,0-17-17Z\" transform=\"translate(-535 -225)\" fill=\"#fff\" /></g><g className=\"shelf bookFour\" id=\"shelf bookFour\" data-name=\"Layer 4\"><rect x=\"294\" y=\"33\" width=\"78\" height=\"324\" rx=\"21.32\" fill=\"#ccddd3\" /><path d=\"M868.5,360.5a20,20,0,1,1,20-20A20,20,0,0,1,868.5,360.5Z\" transform=\"translate(-535 -225)\" fill=\"#ccddd3\" /><path d=\"M868.5,321A19.5,19.5,0,1,1,849,340.5,19.53,19.53,0,0,1,868.5,321m0-1A20.5,20.5,0,1,0,889,340.5,20.5,20.5,0,0,0,868.5,320Z\" transform=\"translate(-535 -225)\" fill=\"#fff\" /></g><g className=\"bookshelf\" id=\"bookshelf\" data-name=\"Layer 3\"><path d=\"M535,638.88V588.12A16.12,16.12,0,0,1,551.12,572h532.76A16.12,16.12,0,0,1,1100,588.12v50.76A16.12,16.12,0,0,1,1083.88,655H551.12C550,655,544.33,654.89,535,638.88Z\" transform=\"translate(-535 -225)\" fill=\"#644536\" /></g><g id=\"Layer_2\" data-name=\"Layer 2\"><path d=\"M654.5,655.5c-1.79,24.22,16.22,41,30,40,12.94-.92,27.42-17.87,25-40\" transform=\"translate(-535 -225)\" fill=\"#644536\" /><path d=\"M927.26,655.49c-1.78,24.21,16.23,41,30,40,12.94-.93,27.42-17.87,25-40\" transform=\"translate(-535 -225)\" fill=\"#644536\" /></g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Svg;","import React from 'react';\r\n\r\nconst Preview = (props) => {\r\n    return(\r\n        < >\r\n        <a href={`#${props.id}`}>\r\n            <img alt={props.alt} src={props.storedImg}></img>\r\n        </a>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Preview;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport firebase from 'firebase/app';\r\nimport Images from './Images';\r\nimport StoredImages from './StoredImages';\r\nimport StorySection from './StorySection';\r\nimport InputSearch from './InputSearch';\r\nimport Details from './Details';\r\nimport Svg from './Svg';\r\nimport Preview from './Preview';\r\n\r\n\r\nclass MainSection extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            apiKey: '851ca0e417e4da7927bb7094b0bb790d78758e507f353acd3aaa66d2e6e48462',\r\n            apiUrl: 'https://api.unsplash.com',\r\n            data: [],\r\n            mappedArray: [],\r\n            imageArray: [],\r\n            textArray: [],\r\n            altArray: [],\r\n            imageToAppend: '',\r\n            userInput: '',\r\n            inputToSearch: '',\r\n            mappedDbref: '',\r\n            textToAppend: '',\r\n            isButtonDisabled: false,\r\n            altText: '',\r\n            dbRefImages: firebase.database().ref('/images'),\r\n            dbRefText: firebase.database().ref('/text'),\r\n            dbRefAlt: firebase.database().ref('/alt')\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        axios({\r\n            \"async\": true,\r\n            \"crossDomain\": true,\r\n            \"url\": `${this.state.apiUrl}/photos/?client_id=${this.state.apiKey}`,\r\n            \"method\": \"GET\",\r\n            params: {\r\n                per_page: 20,\r\n                order_by: \"popular\"\r\n            }\r\n        }).then( (response) => {\r\n            this.setState({\r\n                data: response.data\r\n            })\r\n        }).catch(error => {\r\n            alert(error);\r\n        })\r\n\r\n        this.state.dbRefImages.on('value', (snapshot) => {\r\n            const images = snapshot.val();\r\n            const newImages = []\r\n\r\n            for (let key in images) {\r\n                const individualImages = {\r\n                    imageId: key,\r\n                    imageUrl: images[key]\r\n                }\r\n                newImages.push(individualImages);\r\n            }\r\n\r\n            this.setState({\r\n                imageArray: newImages\r\n            })\r\n        })\r\n\r\n        this.state.dbRefText.on('value', (snapshot) => {\r\n            const stories = snapshot.val();\r\n            const newStories = []\r\n\r\n            for (let key in stories) {\r\n                const individualStories = {\r\n                    storyId: key,\r\n                    storyText: stories[key]\r\n                }\r\n                newStories.push(individualStories);\r\n            }\r\n\r\n            // add in alt tag for firebase for an array\r\n\r\n            this.setState({\r\n                textArray: newStories\r\n            })\r\n        })\r\n\r\n        this.state.dbRefAlt.on('value', (snapshot) => {\r\n            const individualAlt = snapshot.val();\r\n            const newAltText = []\r\n\r\n            for (let key in individualAlt) {\r\n                const altText = {\r\n                    altId: key,\r\n                    altText: individualAlt[key]\r\n                }\r\n                newAltText.push(altText);\r\n            }\r\n\r\n            this.setState({\r\n                altArray: newAltText\r\n            })\r\n        })\r\n    }\r\n\r\n    handleChange = () => {\r\n        this.setState({\r\n            imageToAppend: document.querySelector('input[name=\"radio\"]:checked').value,\r\n            idOfImage: document.querySelector('input[name=\"radio\"]:checked').id,\r\n            altText: document.querySelector('input[name=\"radio\"]:checked').alt\r\n        })\r\n\r\n        // console.log(document.querySelector('input[name=\"radio\"]:checked').alt);\r\n    }\r\n\r\n    handleChangeInput = (event) => {\r\n        this.setState({\r\n            userInput: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSearchImages = (event) => {\r\n        this.setState({\r\n            inputToSearch: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmitSearch = (event) => {\r\n        event.preventDefault();\r\n\r\n        if(this.state.inputToSearch !== '') {\r\n\r\n            let callApi = () => {\r\n                axios({\r\n                    \"async\": true,\r\n                    \"crossDomain\": true,\r\n                    \"url\": `https://api.unsplash.com/search/photos/?client_id=851ca0e417e4da7927bb7094b0bb790d78758e507f353acd3aaa66d2e6e48462&query=${this.state.inputToSearch}`,\r\n                    \"method\": \"GET\",\r\n                    params: {\r\n                        per_page: 20\r\n                    }\r\n                }).then((response) => {\r\n                    this.setState({\r\n                        data: response.data.results\r\n                    })\r\n                }).catch(error => {\r\n                    alert(error)\r\n                })\r\n            }\r\n            callApi();\r\n            this.setState({\r\n                inputToSearch: ''\r\n            })\r\n        } else {\r\n            alert(\"Enter in a search term to continue!\");\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        // error handling\r\n        if (this.state.userInput !== '') {\r\n\r\n            if (this.state.imageToAppend !== '') {\r\n                this.state.dbRefText.push(this.state.userInput);\r\n                this.state.dbRefImages.push(this.state.imageToAppend);\r\n                this.state.dbRefAlt.push(this.state.altText);\r\n\r\n                this.setState({\r\n                    userInput: ''\r\n                })\r\n            }\r\n        } else {\r\n            alert('Select an image and enter in text to continue!')\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n\r\n        const storedImages = this.state.imageArray.map((image, i) => (\r\n            <StoredImages\r\n                storedImg={image.imageUrl}\r\n                id={image.imageId}\r\n                key={i}\r\n            />\r\n\r\n            \r\n        ))\r\n\r\n        const previewImages = this.state.imageArray.map((image, i) => (\r\n            <Preview\r\n                storedImg={image.imageUrl}\r\n                id={image.imageId}\r\n                key={i}\r\n            />\r\n            \r\n            \r\n        ))\r\n\r\n        // const alternative = this.state.altArray.map((alt, i) => (\r\n        //     <Preview\r\n        //         alt={alt.altText}\r\n        //         id={alt.altId}\r\n        //     />\r\n        // ))\r\n        \r\n        const storedText = this.state.textArray.map((text, i) => (\r\n                <StorySection\r\n                    storedText={text.storyText}\r\n                    storedTextId={text.storyId}\r\n                    key={i}\r\n                />\r\n            ))\r\n        // appending text\r\n\r\n        const imagesFinal = this.state.data.map((response, i) => (\r\n            <Images\r\n                previewImg={response.urls.small}\r\n                linkToPage={response.links.html}\r\n                indexKey={i}\r\n                alt={response.alt_description}\r\n                appendImages={this.handleChange}\r\n            />\r\n        ))\r\n\r\n        // appending images\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                \r\n                <div className=\"header-section\">\r\n                {/* <div className=\"previewSection\"> {previewImages} </div> */}\r\n                        <div className=\"innerHeader\"><h1>Writer's Block</h1>\r\n\r\n                        <Svg />\r\n                        </div>\r\n                </div>\r\n\r\n                <Details />\r\n\r\n                <InputSearch inputToSearch={this.state.inputToSearch} handleSearchImages={this.handleSearchImages} handleSubmitSearch={this.handleSubmitSearch} />\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"imageSection\">\r\n                        <section>\r\n                            <div className=\"imageContainer\">\r\n                                {imagesFinal}\r\n                            </div>\r\n\r\n                        </section>\r\n\r\n                    </div>\r\n                    <div className=\"userInputSection\">\r\n                        <textarea onChange={this.handleChangeInput} placeholder=\"Start writing your story here! For example: You hear a knock on the door. You open it and you see a white haired man dressed like a wizard on your porch, in the middle of July. He says his name is Albus Dumbledore and he's come to take your daughter to a boarding school for witches and wizards.\" maxLength=\"500\" value={this.state.userInput} ></textarea>\r\n                        <button disabled={this.state.isButtonDisabled} type=\"submit\">Submit text here</button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"splitSection clearfix\">\r\n                    <div className=\"imageSplit\">{storedImages}</div>\r\n                    <div className=\"textSplit\">{storedText}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainSection;","import React from 'react';\r\n\r\nconst Footer = (props) => {\r\n    return(\r\n        <div className=\"footer-section\">\r\n            <p>&copy; 2020 Designed and Coded by Hira Ahsan </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport firebase from './firebase';\r\nimport './styles/App.css';\r\nimport MainSection from './MainSection';\r\nimport Footer from './Footer';\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      dbRef: firebase.database().ref()\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"App wrapper\">\r\n        <MainSection />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}